services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: quotes_user
      DB_PASSWORD: quotes_password
      DB_NAME: quotes_db
      DB_SSL_MODE: disable
      LOG_LEVEL: info
      LOG_JSON: "false"
      ENVIRONMENT: development
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - quotes-network

  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: quotes_user
      POSTGRES_PASSWORD: quotes_password
      POSTGRES_DB: quotes_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quotes_user -d quotes_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - quotes-network

volumes:
  postgres_data:

networks:
  quotes-network:
    driver: bridge